genus = c("[Pseudo-nitzschia]", NA))
# create a fake taxonomic nomenclature:
map2me <- data.frame(kingdom = c("Eukaryota"),
largegroup = c("Stramenopile"),
division = c("Clade_X"),
class = c("Ochrophyta"),
order = c("Bacillariophyta"),
genus = c("Pseudonitzschia"))
# look at your artificial data:
fake.taxtab
map2me
mapped.tt.stmlin <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = NULL,
ignore.format = FALSE,
synonym.file = NULL,
streamline = TRUE)
mapped.tt.stmlin
mapped.tt.no.stmlin <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = NULL,
ignore.format = FALSE,
synonym.file = NULL,
streamline = FALSE)
mapped.tt.no.stmlin
mapped.tt.exc <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = c("Bacteria"),
ignore.format = FALSE,
synonym.file = NULL,
streamline = TRUE)
mapped.tt.exc
# load ensembleTax's pre-compiled synonyms:
syn.df <- ensembleTax::synonyms_20200816
# pull rows with Diatomea (there's only 1)
diatom.synonyms <- syn.df[which(syn.df == "Diatomea", arr.ind=TRUE)[,'row'],]
# look at it:
diatom.synonyms
mapped.tt.syn <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = c("Bacteria"),
ignore.format = FALSE,
synonym.file = "default",
streamline = TRUE)
mapped.tt.syn
mapped.tt.igfo <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = c("Bacteria"),
ignore.format = TRUE,
synonym.file = NULL,
streamline = TRUE)
mapped.tt.igfo
fake.taxtab2 <- fake.taxtab
fake.taxtab2[fake.taxtab2 == "Pseudo-nitzschia"] <- "Pseudonitzschia"
map2me2 <- map2me
map2me2[map2me2 == "Pseudonitzschia"] <- "Pseudo-nitzschia"
fake.taxtab2
map2me2
mapped.tt.igfo2 <- taxmapper(tt = fake.taxtab2,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me2,
exceptions = c("Bacteria"),
ignore.format = TRUE,
synonym.file = NULL,
streamline = TRUE)
mapped.tt.igfo2
# create a new fake taxonomy table of ASVs and taxonomic assignments
fake.taxtab <- data.frame(ASV = c("CGTC", "AAAA"),
kingdom = c("Eukaryota", "Bacteria"),
supergroup = c("Stramenopile", "Clade_X"),
division = c("Ochrophyta", NA),
class = c("Diatomea", NA),
genus = c("Pseudo-nitzschia", NA))
# look at your artificial data again:
fake.taxtab
map2me
mapped.tt.ambigtest <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = NULL,
ignore.format = TRUE,
synonym.file = NULL,
streamline = TRUE)
mapped.tt.ambigtest
# add an entry in our tax2map2 that matches (but not exactly) one of our ASVs:
map2me <- rbind(map2me,
c("Bacteria", "Bacteria_Clade_X", rep(NA, times = ncol(map2me)-2)))
map2me
# map again with ignore.format = FALSE.. the Bacteria will only map to Bacteria
mapped.tt.ambigtest2 <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = NULL,
ignore.format = FALSE,
synonym.file = NULL,
streamline = TRUE)
# confirm:
mapped.tt.ambigtest2
# now set ignore.format = TRUE.. we'll map to Bacteria Clade X:
mapped.tt.ambigtest3 <- taxmapper(tt = fake.taxtab,
tt.ranks = colnames(fake.taxtab)[2:ncol(fake.taxtab)],
tax2map2 = map2me,
exceptions = NULL,
ignore.format = TRUE,
synonym.file = NULL,
streamline = TRUE)
# confirm:
mapped.tt.ambigtest3
knitr::opts_chunk$set(echo = TRUE)
xx <- list(taxtab1, taxtab2)
library("ensembleTax")
packageVersion("ensembleTax")
# create a fake taxonomy table of ASVs and taxonomic assignments
taxtab1 <- data.frame(ASV = c("CGTC", "AAAA", "CCCA", "CCAA"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c("Stramenopile", "Stramenopile", "Alveolata", "Rhizaria"),
division = c("Ochrophyta", NA, "Dinoflagellata", NA),
class = c("Bacillariophyta", NA, "Syndiniales", NA),
genus = c("Pseudo-nitzschia", NA, NA, NA))
taxtab2 <- data.frame(ASV = c("CGTC", "AAAA", "CCCA", "CCAA"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c("Stramenopile", "Alveolata", "Alveolata", "Stramenopile"),
division = c("Ochrophyta", "Dinoflagellata", "Dinoflagellata", NA),
class = c("Bacillariophyta", NA, "Syndiniales", NA),
genus = c("Pseudo-nitzschia", NA, NA, NA))
# look at your artificial data:
taxtab1
taxtab2
library("ensembleTax")
packageVersion("ensembleTax")
# create a fake taxonomy table of ASVs and taxonomic assignments
taxtab1 <- data.frame(ASV = c("CGTC", "AAAA", "CCCA", "CCAA"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c("Stramenopile", "Stramenopile", "Alveolata", "Rhizaria"),
division = c("Ochrophyta", NA, "Dinoflagellata", NA),
class = c("Bacillariophyta", NA, NA, NA),
genus = c("Pseudo-nitzschia", NA, NA, NA))
taxtab2 <- data.frame(ASV = c("CGTC", "AAAA", "CCCA", "CCAA"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c("Stramenopile", "Alveolata", "Alveolata", "Stramenopile"),
division = c("Ochrophyta", "Dinoflagellata", "Dinoflagellata", NA),
class = c("Bacillariophyta", NA, "Syndiniales", NA),
genus = c("Pseudo-nitzschia", NA, NA, NA))
# look at your artificial data:
taxtab1
taxtab2
xx <- list(taxtab1, taxtab2)
names(xx) <- c("tab1","tab2")
eTax <- assign.ensembleTax(x,
tablenames = names(x),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(x)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
xx <- list(taxtab1, taxtab2)
names(xx) <- c("tab1","tab2")
eTax <- assign.ensembleTax(xx,
tablenames = names(x),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(x)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
eTax <- assign.ensembleTax(xx,
tablenames = names(x),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(x)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
xx <- list(taxtab1, taxtab2)
names(xx) <- c("tab1","tab2")
eTax <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
xx <- list(taxtab1, taxtab2)
names(xx) <- c("tab1","tab2")
eTax <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
eTax
library("ensembleTax")
packageVersion("ensembleTax")
# create a fake taxonomy table of ASVs and taxonomic assignments
taxtab1 <- data.frame(ASV = c("sv1", "sv2", "sv3", "sv4"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c("Stramenopile", "Stramenopile", "Alveolata", "Rhizaria"),
division = c("Ochrophyta", NA, "Dinoflagellata", NA),
class = c("Bacillariophyta", NA, NA, NA),
genus = c("Pseudo-nitzschia", NA, NA, NA))
taxtab2 <- data.frame(ASV = c("sv1", "sv2", "sv3", "sv4"),
kingdom = c("Eukaryota", "Eukaryota", "Eukaryota", "Eukaryota"),
supergroup = c("Stramenopile", "Alveolata", "Alveolata", "Stramenopile"),
division = c("Ochrophyta", "Dinoflagellata", "Dinoflagellata", NA),
class = c("Bacillariophyta", NA, "Syndiniales", NA),
genus = c("Pseudo-nitzschia", NA, NA, NA))
# look at your artificial data:
taxtab1
taxtab2
xx <- list(taxtab1, taxtab2)
names(xx) <- c("tab1","tab2")
eTax <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
eTax
eTax.nona <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1
taxtab2
eTax.nona
# create a fake taxonomy table of ASVs and taxonomic assignments
taxtab3 <- taxtab1
xx.with3 <- list(taxtab1, taxtab2, taxtab3)
names(xx.with3) <- c("tab1", "tab2", "tab3")
eTax.def <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1
taxtab2
taxtab3
eTax.def
# create a fake taxonomy table of ASVs and taxonomic assignments
taxtab3 <- taxtab1
xx.with3 <- list(taxtab1, taxtab2, taxtab3)
names(xx.with3) <- c("tab1", "tab2", "tab3")
eTax.def <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
# create a fake taxonomy table of ASVs and taxonomic assignments
taxtab3 <- taxtab1
xx.with3 <- list(taxtab1, taxtab2, taxtab3)
names(xx.with3) <- c("tab1", "tab2", "tab3")
eTax.def <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1
taxtab2
taxtab3
eTax.def
eTax.nona2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1
taxtab2
eTax.nona2
eTax.nona3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0)
eTax.nona2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1
taxtab2
eTax.nona2
eTax.nona3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1
taxtab2
eTax.nona3
eTax.tb2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1 # (remember taxtab3 is identical to this, so count 2x)
taxtab2
eTax.nona2
eTax.tb3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
# ensemble with 3 tables:
eTax.tb3
eTax.tb2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = c("tab2"),
count.na=TRUE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1 # (remember taxtab3 is identical to this, so count 2x)
taxtab2
eTax.nona2
eTax.tb3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = c("tab2"),
count.na=TRUE,
assign.threshold = 0)
# ensemble with 3 tables:
eTax.tb3
eTax.tb2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = c("tab2"),
count.na=TRUE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1 # (remember taxtab3 is identical to this, so count 2x)
taxtab2
eTax.tb2
eTax.tb3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = c("tab2"),
count.na=TRUE,
assign.threshold = 0)
# ensemble with 3 tables:
eTax.tb3
eTax.tb2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = c("tab1"),
count.na=FALSE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1 # (remember taxtab3 is identical to this, so count 2x)
taxtab2
eTax.tb2
# counting NA's:
eTax.tb2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=c(2,1),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
taxtab1 # (remember taxtab3 is identical to this, so count 2x)
taxtab2
eTax.tb2
# NOT counting NA's:
eTax.tb2 <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=c(2,1),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0)
# show the initials and ensemble for ease-of-interpretation:
eTax.tb2
eTax.wt3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=c(1,2,1),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0)
# ensemble with 3 tables:
eTax.wt3
eTax.wttb3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=c(1,2,1),
tiebreakz = c("tab1"),
count.na=TRUE,
assign.threshold = 0)
taxtab1 # (remember taxtab3 is identical to this, so count 2x)
taxtab2
eTax.wttb3
eTax.wttb3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=c(1,2,1),
tiebreakz = c("tab2"),
count.na=TRUE,
assign.threshold = 0)
taxtab1 # (remember taxtab3 is identical to this, so count 2x)
taxtab2
eTax.wttb3
# tie-breaking to prioritize table 1, but with assign.threshold = 60%
eTax.at <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx)),
tiebreakz = c("tab1"),
count.na=TRUE,
assign.threshold = 0.6)
# show the initials and ensemble for ease-of-interpretation:
eTax.at
# take away the tiebreaker and weight table 1 2x:
eTax.at <- assign.ensembleTax(xx,
tablenames = names(xx),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=c(2,1),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0.6)
eTax.at
# a low threshold:
eTax.at3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0.5)
eTax.at3
# a high threshold (need all 3 to agree here for ensemble assignment):
eTax.at3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0.9)
eTax.at3
# a low threshold with count.na = FALSE:
eTax.at3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0.5)
eTax.at3
# a high threshold with count.na = FALSE (need all 3 to agree here for ensemble assignment):
eTax.at3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=TRUE,
assign.threshold = 0.9)
eTax.at3
# a low threshold with count.na = FALSE:
eTax.at3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0.5)
eTax.at3
# a high threshold with count.na = FALSE (need all 3 to agree here for ensemble assignment):
eTax.at3 <- assign.ensembleTax(xx.with3,
tablenames = names(xx.with3),
ranknames = colnames(taxtab1)[2:ncol(taxtab1)],
weights=rep(1,length(xx.with3)),
tiebreakz = NULL,
count.na=FALSE,
assign.threshold = 0.9)
eTax.at3
